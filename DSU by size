class DSU{
        public:
        vector<int> parent,size;
        DSU(int n){
           parent.resize(n+1,0);
           size.resize(n+1);
           for(int i=0;i<=n;i++){
               parent[i]=i;
               size[i]=1;
           }
        }
        
        int findParent(int a){
            if(a==parent[a])return a;
            return parent[a] = findParent(parent[a]);
        }

        void Union(int a, int b){
            int ulPa = findParent(a);
            int ulPb = findParent(b);

            if(ulPa==ulPb)return;
            if(size[ulPa]<size[ulPb]){
                parent[ulPa]= ulPb;
                size[ulPb]+= size[ulPa];
            }
            else{
                parent[ulPb]= ulPa;
                size[ulPa]+= size[ulPb];
            }
        }   
    };
