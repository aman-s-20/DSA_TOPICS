
#include<bits/stdc++.h>
using namespace std;

struct Node {
	int val;
	Node* left;
	Node* right;

	Node(int d) {
		this->val = d;
		this->left = NULL;
		this->right = NULL;
	}
};
Node* insertNode(Node* root, int d) {
	// base case
	if (root == NULL) {
		root = new Node(d);
		return root;
	}

	if (d > root->val) {
		root->right = insertNode(root->right, d);
	}
	else {
		root->left = insertNode(root->left, d);
	}

	return root;
}

void takeInput(Node* &root, vector<int> &arr) {
	for (int i = 0; i < arr.size(); i++) {
		root = insertNode(root, arr[i]);
	}
}

void inorderTraversal(Node* root) {
	if (root == NULL)return;

	inorderTraversal(root->left);
	cout << root->val << " ";
	inorderTraversal(root->right);
}


int  main()
{
	int n;
	cin >> n;
	vector<int> v(n);
	for (int i = 0; i < n; i++) {
		cin >> v[i];
	}
	Node * root = NULL;
	takeInput(root, v);
	if (root == NULL) {
		cout << "is null";
	}
	inorderTraversal(root);

	return 0;
}
